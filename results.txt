YOUR SCORE: 564 out of 564

TEST NAME: testAttackWithInsufficientWeapon
TEST DESCRIPTION: Monster: does monster.attack throw an IllegalArgumentException when attacked with an insufficient weapon?
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testAttackWithNoAmmo
TEST DESCRIPTION: Monster: does monster.attack throw an IllegalArgumentException when attacked with no ammunition?
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testAttackDeadMonster
TEST DESCRIPTION: Monster: does Monster.attack throw an IllegalStateException when the monster was attacked when it was already dead?
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testAttackMonsterButDontKillMonster
TEST DESCRIPTION: Monster: Monster.isDead should return false after being attacked with less than ammunitionCountNeededToKill
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testKillMonsterInTwoPasses
TEST DESCRIPTION: Monster: Monster attacked with ammunitionCountNeededToKill over the course of 2 calls on monster.attack should be dead, i.e. should return true from isDead()
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testGetDefaultProtector
TEST DESCRIPTION: Monster: Monster with no custom protector should return the protector of its monster type from Monster.getProtectedBy()
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testGetCustomProtector
TEST DESCRIPTION: Monster: Monster with custom protector should return the custom protector from Monster.getProtectedBy()
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testMonsterCompareTo
TEST DESCRIPTION: Monster: test Monster.compareTo
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testPlayerDeath
TEST DESCRIPTION: Player: Does Player.isDead return true when health is == 0?
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testPlayerAlive
TEST DESCRIPTION: Player: Does Player.isDead return false when health is == 100?
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testChangePlayerHealth
TEST DESCRIPTION: Player: Does Player.changeHealth result in health changing as expected?
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testReducePlayerHealth
TEST DESCRIPTION: Player: Does Player.changeHealth, with a negative number, result in health changing as expected?
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testAddAmmo
TEST DESCRIPTION: Player: Does Player.addAmmunition result in ammunition count changing as expected?
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testChangeAmmo
TEST DESCRIPTION: Player: Does Player.changeAmmunitionRoundsForWeapon result in ammunition count changing as expected?
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testReduceAmmo
TEST DESCRIPTION: Player: Does Player.changeAmmunitionRoundsForWeapon result in ammunition count beign reduced as expected?
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testHasWeapon
TEST DESCRIPTION: Player: Does Player.hasWeapon return what is expected based on what weapons we have given him?
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testPlayerCompareTo
TEST DESCRIPTION: Player: Does Player.compareTo return what is expected?
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testRoomDangerLevel
TEST DESCRIPTION: Room: Danger level should equal ordinal+1 values of all monsters combined
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testRoomCompareTo
TEST DESCRIPTION: Room: compareTo should compare based on danger level
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testGetWeaponsWonUponCompletion
TEST DESCRIPTION: Room: did not get expected set of weapons won upon completion
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testGetWeaponsWonUponCompletion
TEST DESCRIPTION: Room: check keys and values of room.getAmmoWonUponCompletion()
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testSinglePlayerSuccessGame
TEST DESCRIPTION: GameBot: Play Single Player Success
TEST POINT VALUE: 36
+++++TEST PASSED+++++

TEST NAME: testSinglePlayerFailureGame
TEST DESCRIPTION: GameBot: Play Single Player Failure
TEST POINT VALUE: 36
+++++TEST PASSED+++++

TEST NAME: testMultiPlayerSuccessGame
TEST DESCRIPTION: GameBot: Play Multi-Player Success
TEST POINT VALUE: 36
+++++TEST PASSED+++++

TEST NAME: testMultiPlayerFailureGame
TEST DESCRIPTION: GameBot: Play Multi-Player Failure
TEST POINT VALUE: 36
+++++TEST PASSED+++++

TEST NAME: testReapCompletionRewards
TEST DESCRIPTION: GameBot: Check that player reaps the rewards of completing a room: GameBot.reapCompletionRewards()
TEST POINT VALUE: 36
+++++TEST PASSED+++++

TEST NAME: testKillMonster
TEST DESCRIPTION: GameBot: Check that killMonster kills the right set of monsters and results in the correct changes to the player
TEST POINT VALUE: 36
+++++TEST PASSED+++++

TEST NAME: testGetCompletedRooms
TEST DESCRIPTION: GameBot: Check that Gamebot.getCompletedRooms() returns all completed rooms, and no other rooms
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testGetLivePlayers
TEST DESCRIPTION: GameBot: Check that Gamebot.getLivePlayers() returns all live players, and no other players
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testGetLivePlayersWithWeaponAndAmmunition
TEST DESCRIPTION: GameBot: Check that Gamebot.getLivePlayersWithWeaponAndAmmunition() returns the correct set of players
TEST POINT VALUE: 12
+++++TEST PASSED+++++

TEST NAME: testGetAllProtectorsInRoom
TEST DESCRIPTION: GameBot: Check that Gamebot.getAllProtectorsInRoom() returns the correct set of monsters
TEST POINT VALUE: 24
+++++TEST PASSED+++++

TEST NAME: testCanKill
TEST DESCRIPTION: GameBot: Check that Gamebot.canKill() responds correctly
TEST POINT VALUE: 36
+++++TEST PASSED+++++


